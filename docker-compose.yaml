version: '3.7'

services:
  tech-task-dev-backend:
    image: joepalmeras66/tech-task-dev-backend:${TECH_TASK_VERSION:-latest}
    ports:
      - '8080:8080'
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${DB_CONTAINER_NAME:-postgres_container}:5432/db
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    networks:
      - db_net
      - swagger_net
    depends_on:
      - postgres

  postgres:
    container_name: ${DB_CONTAINER_NAME:-postgres_container}
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: db
      PGDATA: /data/postgres
    volumes:
       - ./postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - db_net
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - ./pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - db_net
    depends_on:
      - postgres
    restart: unless-stopped

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: "swagger-ui"
    ports:
      - "8082:8080"
    volumes:
      - ./swagger/openapi.yaml:/openapi.yaml
    environment:
      SWAGGER_JSON: /openapi.yaml
      # API_URL: ""
    networks:
      - swagger_net
    depends_on:
      - tech-task-dev-backend

  swagger-api:
    image: danielgtaylor/apisprout
    container_name: "swagger-api"
    ports:
      - "8083:8000"
    volumes:
      - ./swagger/openapi.yaml:/openapi.yaml
    command: /openapi.yaml
    networks:
      swagger_net:
        aliases:
          - local.swagger.apisprout
    depends_on:
      - tech-task-dev-backend

  swagger-nginx:
    image: nginx:mainline-alpine
    container_name: "swagger-nginx"
    ports:
      - "8084:8084"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      swagger_net:
        aliases:
          - local.swagger.api
    depends_on:
      - tech-task-dev-backend

networks:
  db_net:
    driver: bridge
  swagger_net:
    driver: bridge

volumes:
    postgres:
    pgadmin: